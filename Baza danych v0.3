
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include <ctype.h>

struct biblioteka{
	int nr;
	char marka[100];
	char model[100];
	char rejestracja[100];
	int cena;
	int przebieg;
	char przeglad[100];
	char uszkodzone[100];
};
typedef struct biblioteka biblioteka;

unsigned char* wczytywanie_buforaFUNKCJAPOMOCNICZA( int* dlugosc);
int wczytaj(unsigned char* bufor,biblioteka* baza ,int len, int nr);
int strdoint(char* slowo);
void zapisz(char nazwa[], biblioteka* baza, int ostatni);
int dodajrekord(biblioteka* baza, int numer);
int wczytajkonsola(char tekst[], char* miejsce);
int wyszukaj(biblioteka* baza, int ostatni);

int main(int argc, char** argv)
{
    biblioteka baza[1000];

    char tablica_znakow[100];
    int ilosc_motocykli = 1;
    unsigned char* bufor;

    char nazwa_pliku[] = "bazadanych.txt";//Tutaj jest nazwa pliku z danymi

    int a;
    bufor = wczytywanie_buforaFUNKCJAPOMOCNICZA(&a);//a to dlugosc tekstu w bajtach
     if(bufor != NULL){ //wczytanie domyslnej bazy danych
        ilosc_motocykli = wczytaj(bufor, baza, a, 1);
    }

   //wczytajkonsola("Podaj nazwe pliku wraz z rozszerzeniem (np. 'a.txt')\n", tablica_znakow);


  // dodajrekord(baza,ilosc_motocykli);
  //  printf("to oddaje funkcja dodawania");




    for(int test=0;test<ilosc_motocykli;test++){
    printf("Dodany rekord: %d %9s %9s %9s %9dzl %9dkm %9s %9s\n", baza[test].nr, baza[test].marka, baza[test].model, baza[test].rejestracja, baza[test].cena, baza[test].przebieg, baza[test].przeglad, baza[test].uszkodzone);}

     wyszukaj(baza,ilosc_motocykli);

 //   zapisz(nazwa_pliku,baza,ilosc_motocykli);

	return 0;
}
int strdoint(char* slowo){//NIEUZYWANE
	int j;

	for (j = 0; j < 3; j++)
		*(slowo+j) = tolower(*(slowo+j));

    slowo[3] = '\0';

	if (!strcmp(slowo, "tak") || !strcmp(slowo, "y"))
		return 1;

	else if (!strcmp(slowo, "nie") || !strcmp(slowo, "n"))
		return 0;

	else
		return -1;
}

int wczytaj(unsigned char* bufor,biblioteka* baza ,int len, int nr){

    char c;
    char slowo[100];
    int m;
    int i = 0;
    int j = 0;

    for(m = 0; m < len; m++){
        c = bufor[m];
        if (c == '\n'){
            slowo[j] = '\0';
            baza[nr-1].nr = nr;
            //printf("%s", slowo);
            strcpy(baza[nr-1].uszkodzone, slowo);
            nr++;
            i = 0;
            j = 0;
        }

   else  if (c == ','){

            slowo[j] = '\0';
            j = 0;
                switch (i){
                case 0:
                    strcpy(baza[nr-1].marka, slowo);
                    break;
                case 1:
                    strcpy(baza[nr-1].model, slowo);
                    break;
                case 2:
                    strcpy(baza[nr-1].rejestracja, slowo);
                    break;
                case 3:
                    sscanf(slowo,"%d",&baza[nr-1].cena);
                    break;
                case 4:
                    sscanf(slowo,"%d",&baza[nr-1].przebieg);
                    break;
                case 5:
                    strcpy(baza[nr-1].przeglad, slowo);
                    break;


                }

            i++;
        }
        else {
            slowo[j] = c;
            j++;
        }

    }

    int b=2;
    //printf("%d\n",baza[b].przebieg);
  //  for (int a = 0; a <=6; a++){

    //        printf("Wczytana biblioteka: %d %9s %9s %9s %9dzl %9dkm %9s %9s\n", baza[a].nr, baza[a].marka, baza[a].model, baza[a].rejestracja, baza[a].cena, baza[a].przebieg, baza[a].przeglad, baza[a].uszkodzone);}

   // for (int a = 1; a <= 10; j++){
   //         printf("%5d %20s %20s", baza[j-1].nr, baza[j-1].marka, baza[j-1].kolor);}
    return nr-1;
}

unsigned char* wczytywanie_buforaFUNKCJAPOMOCNICZA( int* dlugosc){

    int status;

    FILE * plik;
    plik = fopen("bazadanych.txt", "rb");
    if ( plik == NULL )
    {
        printf("Nie moge otworzyc pliku!\n");
        return 0;
    }

    fseek(plik, 0L, SEEK_END);     // Przesuwamy wskanik na koniec pliku
    *dlugosc = ftell(plik);         // Odczytujemy długoć pliku
    //printf("plik ma dlugosc %d bajtow\n", *dlugosc);

    unsigned char * bufor = malloc(*dlugosc);
    if (bufor == NULL)
    {
        printf("Nie moge przdzielic pamieci\n");
        return 0;
    }

    rewind(plik);
    status = fread(bufor, 1, *dlugosc, plik);

    if ( status != *dlugosc )
    {
        printf("Cos poszlo zle!");
        free(bufor);
        fclose(plik);
        return 0;
    }
    fclose(plik);

   /* for(int i=0;i<*dlugosc;i++)
	{

			printf("%c",bufor [i]);
	}
    */
    return bufor;
}

int wyszukaj(biblioteka* baza, int ostatni){


	printf("podaj Marke/model/rejestracje:\n" );


        int a=0;
        char b;
        char slowo[100];

    while((b=getchar())!='\n'){

        slowo[a]=b;
        a++;
    }

    slowo[a]='\0';

    printf("%s\n",slowo);

    ;



for (int j=1; j <= ostatni; j++){
            if (!strcmp(baza[j-1].marka, slowo) || !strcmp(baza[j-1].model, slowo) || !strcmp(baza[j-1].rejestracja, slowo)){
              printf("%d %9s %9s %s %9dzl %9dkm %9s      %9s\n", baza[j-1].nr, baza[j-1].marka, baza[j-1].model, baza[j-1].rejestracja, baza[j-1].cena, baza[j-1].przebieg, baza[j-1].przeglad, baza[j-1].uszkodzone);
              
}
}


}
